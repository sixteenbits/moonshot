#include <genesis.h>

#ifndef PHASE1_H

#define PHASE1_H

//anims

#define UP 0
#define IDLE 4
#define RIGHT 1
#define DOWN 2
#define LEFT 3

struct phase1_data{
    u16 tile_index;
    u16 player_x;
    u16 player_y;
    Sprite* player_sprt;
    u8 life;
    u8 lives;
    u16** maps;
};

u16 mymap[1120] = {25,10,11,10,11,10,11,10,11,10,11,10,11,72,73,74,75,10,11,10,11,10,11,10,11,10,11,72,73,74,75,10,11,10,11,10,11,10,11,12,
41,35,36,35,36,137,138,139,140,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,169,170,35,36,35,36,28,
25,51,52,51,52,153,154,155,156,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,185,186,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,201,202,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,233,234,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,249,250,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,171,172,173,174,175,176,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,187,188,189,190,191,192,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,203,204,205,206,207,208,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,219,220,221,222,223,224,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,235,236,237,238,239,240,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,251,252,253,254,255,256,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,185,186,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,201,202,51,52,51,52,44,
41,227,228,229,230,231,232,227,228,229,230,231,232,35,36,35,36,35,36,35,36,35,36,35,171,172,173,174,175,176,36,35,36,185,186,35,36,35,36,28,
25,243,244,245,246,247,248,243,244,245,246,247,248,51,52,51,52,51,52,51,52,51,52,51,187,188,189,190,191,192,52,51,52,201,202,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,203,204,205,206,207,208,36,35,36,185,186,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,219,220,221,222,223,224,52,51,52,201,202,51,52,51,52,44,
41,67,68,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,235,236,237,238,239,240,36,35,36,185,186,35,36,35,36,28,
25,83,84,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,251,252,253,254,255,256,52,51,52,201,202,51,52,51,52,44,
41,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,185,186,35,36,35,36,28,
25,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,201,202,51,52,51,52,44,
41,35,36,35,36,137,138,139,140,137,138,139,140,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,201,202,35,36,35,36,28,
25,51,52,51,52,153,154,155,156,153,154,155,156,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,217,218,51,52,51,52,44,
41,35,36,35,36,137,138,139,140,137,138,139,140,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,233,234,35,36,35,36,28,
41,51,52,51,52,153,154,155,156,153,154,155,156,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,249,250,51,52,51,52,44,
57,58,59,58,59,58,58,58,58,58,120,121,122,123,58,58,58,58,58,58,58,58,58,58,58,120,121,122,123,58,58,58,58,58,58,58,58,58,59,60};


void* phase1_init();
void phase1_destroy(void*);

/**
 * Returns 
 *   0 -> In game, 
 *   1 -> Player wins
 *   2-> Player Loose
 * */
u16 phase1_update(void*, u16 frame);

/**
 * Manejador de entrada
 * joy-> Indica el mando que ha activado la entrada
 * state -> Indica el estado del mando (boton activado)
 * changed -> indica si ha cambiado (pulsado o solatado)
 * */
void phase1_input_handler(void* data, u16 joy, u16 state, u16 changed);

void phase1_input_sinc_handler(void* data, u16 joy);

#endif